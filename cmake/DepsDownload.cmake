
# Set this to false, when using a custom v8 build for testing
set(__deps_check_enabled true)

function(DownloadDeps basePath)
    # Set up variables
    if(WIN32)
        set(__deps_release_file "v8_monolith.lib")
        set(__deps_debug_file "v8_monolithd.lib")
    elseif(UNIX)
        set(__deps_release_file "libv8_monolith.a")
        set(__deps_debug_file "libv8_monolith.a")
    endif()
    set(__deps_release_lib "${basePath}/v8/lib/Release")
    set(__deps_debug_lib "${basePath}/v8/lib/Debug")
    set(__deps_headers "${basePath}/v8/include/headers.zip")
    set(__deps_update_file "${basePath}/v8/update.json")

    if(__deps_check_enabled)
        # Version check
        file(DOWNLOAD "https://cdn.altv.mp/deps/v8/dev/update.json" ${__deps_update_file})
        file(READ ${__deps_update_file} __deps_update_json)
        string(JSON __deps_hashes GET ${__deps_update_json} hashList)
        file(REMOVE ${__deps_update_file})

        # Download release binary
        if(EXISTS "${__deps_release_lib}/${__deps_release_file}")
            file(SHA1 "${__deps_release_lib}/${__deps_release_file}" __deps_release_checksum)
        else()
            set(__deps_release_checksum 0)
        endif()
        string(JSON __deps_release_checksum_cdn GET ${__deps_hashes} ${__deps_release_file})
        if(NOT ${__deps_release_checksum} STREQUAL ${__deps_release_checksum_cdn})
            message("Downloading release binary...")
            file(DOWNLOAD "https://cdn.altv.mp/deps/v8/dev/${__deps_release_file}" "${__deps_release_lib}/${__deps_release_file}")
        endif()

        # Only download debug binary in Debug builds
        if(CMAKE_BUILD_TYPE STREQUAL "Debug")
            if(EXISTS "${__deps_debug_lib}/${__deps_debug_file}")
                file(SHA1 "${__deps_debug_lib}/${__deps_debug_file}" __deps_debug_checksum)
            else()
                set(__deps_debug_checksum 0)
            endif()
            string(JSON __deps_debug_checksum_cdn GET ${__deps_hashes} ${__deps_debug_file})
            if(NOT ${__deps_debug_checksum} STREQUAL ${__deps_debug_checksum_cdn})
                message("Downloading debug binary...")
                file(DOWNLOAD "https://cdn.altv.mp/deps/v8/dev/${__deps_debug_file}" "${__deps_debug_lib}/${__deps_debug_file}")
            endif()
        endif()

        # Download headers
        if(EXISTS ${__deps_headers})
            file(SHA1 ${__deps_headers} __deps_headers_checksum)
        else()
            set(__deps_headers_checksum 0)
        endif()
        string(JSON __deps_headers_checksum_cdn GET ${__deps_hashes} headers.zip)
        if(NOT ${__deps_headers_checksum} STREQUAL ${__deps_headers_checksum_cdn})
            message("Downloading headers...")
            file(DOWNLOAD "https://cdn.altv.mp/deps/v8/dev/headers.zip" ${__deps_headers})
            message("Extracting headers...")
            file(ARCHIVE_EXTRACT INPUT ${__deps_headers} DESTINATION "${basePath}")
        endif()
    endif()
endfunction()
